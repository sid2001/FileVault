// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package backend

import (
	"file-vault/internal/models"
	"time"

	"github.com/google/uuid"
)

type AuthPayload struct {
	Token string       `json:"token"`
	User  *models.User `json:"user"`
}

type CreateFolderInput struct {
	Name           string     `json:"name"`
	ParentFolderID *uuid.UUID `json:"parentFolderId,omitempty"`
	IsPublic       *bool      `json:"isPublic,omitempty"`
}

type FileFiltersInput struct {
	Search     *string    `json:"search,omitempty"`
	MimeType   *string    `json:"mimeType,omitempty"`
	SizeMin    *int       `json:"sizeMin,omitempty"`
	SizeMax    *int       `json:"sizeMax,omitempty"`
	DateFrom   *time.Time `json:"dateFrom,omitempty"`
	DateTo     *time.Time `json:"dateTo,omitempty"`
	Tags       []string   `json:"tags,omitempty"`
	UploadedBy *string    `json:"uploadedBy,omitempty"`
	FolderID   *uuid.UUID `json:"folderId,omitempty"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Mutation struct {
}

type Query struct {
}

type RegisterInput struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Subscription struct {
}

type UpdateFileInput struct {
	Filename *string    `json:"filename,omitempty"`
	Tags     []string   `json:"tags,omitempty"`
	IsPublic *bool      `json:"isPublic,omitempty"`
	FolderID *uuid.UUID `json:"folderId,omitempty"`
}
